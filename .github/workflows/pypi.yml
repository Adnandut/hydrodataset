# This workflows will upload a Python Package using uv and twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: pypi

on:
    release:
        types: [published]

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0  # Fetch all history for all tags and branches
                  ref: ${{ github.ref }}  # Checkout the exact tag/ref that triggered this workflow

            - name: Install uv
              uses: astral-sh/setup-uv@v4
              with:
                  enable-cache: true
                  cache-dependency-glob: "**/pyproject.toml"

            - name: Set up Python
              run: uv python install 3.11

            - name: Install dependencies
              run: uv sync --all-extras

            # Temporarily skip tests until they are fully implemented
            # Tests require large dataset downloads not suitable for CI
            # - name: Run tests
            #   run: uv run pytest tests/ -v

            - name: Verify git tag and version
              run: |
                  echo "Current ref: ${{ github.ref }}"
                  echo "Current ref name: ${{ github.ref_name }}"
                  git describe --tags --exact-match || echo "Not on exact tag"
                  git log -1 --oneline

            - name: Build package
              run: uv build --no-isolation

            - name: Publish to PyPI
              env:
                  TWINE_USERNAME: ${{ secrets.PYPI_USERS }}
                  TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
              run: uv run twine upload dist/*
